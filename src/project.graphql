type Project {
  projectId: String!
  taskType: TaskType!
  name: String!
  objectClassNames:[String]!
  instructionsText: String
  instructionsImageURL: String
  instructionsVideoURL: String
}

type ProjectList {
  entries: [Project]
  nextPageToken: String
}

type ImageList {
  entries: [File]
  nextPageToken: String
}

type TrainingSession {
  trainingSessionId: String!
  projectId: String!
}

type Query {
  projects(nextPageToken:String): ProjectList
  project(projectId: String!): Project
  images(projectId: String!, nextPageToken: String): ImageList
}

input ConfirmedFile {
  projectId: String!
  fileId: String!
}

type Mutation {
  createProject(name: String!, taskType: TaskType!, objectClassNames:[String]!, instructionsText:String):Project
  updateProject(projectId: String!, name: String, taskType: TaskType, objectClassNames:[String], instructionsText:String):Project
  removeProject(projectId: String!):String

  createInstructionsImage(projectId: String!): File
  commitInstructionsImage(image:ConfirmedFile!): String

  createTrainingImage(projectId: String!): File
  commitTrainingImage(projectId: String!, fileId: String!): File

  createTrainingSession(projectId: String!):String
}
