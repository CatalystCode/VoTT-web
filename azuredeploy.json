{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "variables": {
    "siteNameClean": "[toLower(replace(parameters('siteName'),'-', ''))]",
    "hostingPlanName": "[toLower(replace(parameters('siteName'),'-', ''))]"
},
  "parameters": {
    "siteName": {
      "type": "string",
      "defaultValue": "myvottsite",
      "metadata": {
        "description": "The name of the web app that you wish to create. Name must contain only lowercase letters or numbers."
      }
    },
    "resourceLocation": {
      "type": "string",
      "allowedValues": [
        "East US",
        "West US"
      ]
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "defaultValue": "S1",
      "metadata": {
        "description": "The pricing tier for the hosting plan."
      }
    },
    "workerSize": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2"
      ],
      "defaultValue": "0",
      "metadata": {
        "description": "The instance size of the hosting plan."
      }
    },
    "repoURL": {
      "type": "string",
      "defaultValue": "https://github.com/catalystcode/vott-web.git",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      }
    },
    "postgresAdminUsername": {
      "type": "string"
    },
    "postgresAdminPassword": {
      "type": "securestring"
    },
    "sendgridApiKey": {
      "type": "securestring"
    },
    "adminEmail": {
      "type": "string",
      "defaultValue": "youremail@address"
    },
    "adminDisplayName": {
      "type": "string",
      "defaultValue": "Your Name"
    },
    "invitationSenderEmail": {
      "type": "string",
      "defaultValue": "noreply@address"
    },
    "invitationSenderName": {
      "type": "string",
      "defaultValue": "Invitation Sender Display Name"
    }
  },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('resourceLocation')]",
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[parameters('workerSize')]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('siteNameClean')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('resourceLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DBforPostgreSQL/servers/', variables('siteNameClean'))]"
      ],
      "properties": {
        "serverFarmId": "[variables('hostingPlanName')]",
        "siteConfig": {
          "connectionStrings": [
            {
              "name": "defaultConnection",
              "value": "[Concat('Database=postgres;Server=',variables('siteNameClean'),'.postgres.database.azure.com;User Id=',parameters('postgresAdminUsername'),'@',variables('siteNameClean'),';Password=',parameters('postgresAdminPassword'))]",
              "type": "PostgreSQL"
            }
          ],
          "appSettings": [
            {
              "name": "SENDGRID_API_KEY",
              "value": "[parameters('sendgridApiKey')]"
            },
            {
              "name": "VOTT_DEFAULT_ADMIN_EMAIL",
              "value": "[parameters('adminEmail')]"
            },
            {
              "name": "VOTT_DEFAULT_ADMIN_NAME",
              "value": "[parameters('adminDisplayName')]"
            },
            {
              "name": "VOTT_DEFAULT_FROM_EMAIL",
              "value": "[parameters('invitationSenderEmail')]"
            },
            {
              "name": "VOTT_DEFAULT_FROM_NAME",
              "value": "[parameters('invitationSenderName')]"
            },
            {
              "name": "VOTT_JWT_SECRET",
              "value": "[uniqueString(resourceGroup().id)]"
            },
            {
              "name": "PG_HOST",
              "value": "[Concat(variables('siteNameClean'), '.postgres.database.azure.com')]"
            },
            {
              "name": "PG_USER",
              "value": "[Concat(parameters('postgresAdminUsername'),'@', variables('siteNameClean'))]"
            },
            {
              "name": "PG_PASSWORD",
              "value": "[parameters('postgresAdminPassword')]"
            },
            {
              "name": "GRAPHIQL_ENABLED",
              "value": "true"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "7.0.0"
            },
            {
              "name": "AZURE_STORAGE_CONNECTION_STRING",
              "value": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('siteNameClean'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('siteNameClean')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[Concat('Microsoft.Web/Sites/', variables('siteNameClean'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "name": "[variables('siteNameClean')]",
      "type": "Microsoft.DBforPostgreSQL/servers",
      "apiVersion": "2017-04-30-preview",
      "sku": {
        "name": "PGSQLS100",
        "tier": "Standard",
        "capacity": "100"
      },
      "properties": {
        "administratorLogin": "[parameters('postgresAdminUsername')]",
        "administratorLoginPassword": "[parameters('postgresAdminPassword')]"
      },
      "location": "[parameters('resourceLocation')]",
      "tags": {},
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "2016-02-01-privatepreview",
          "dependsOn": [
              "[concat('Microsoft.DBforPostgreSQL/servers/', variables('siteNameClean'))]"
          ],
          "location": "[parameters('resourceLocation')]",
          "name": "[concat(variables('siteNameClean'),'firewall')]",
          "properties": {
              "startIpAddress": "0.0.0.0",
              "endIpAddress": "255.255.255.255"
          }
        }
      ]
    },
    {
      "name": "[variables('siteNameClean')]",
      "type": "Microsoft.Storage/storageAccounts",
      "kind": "Storage",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "Standard_LRS"
      },
      "location": "[parameters('resourceLocation')]",
      "tags": {},
      "properties": {}
    }
  ]
}