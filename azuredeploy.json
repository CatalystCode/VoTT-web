{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "variables": {
    "storageName": "[concat(toLower(parameters('siteName')), 'storage')]",
    "storageAccountId": "[concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/', variables('storageName'))]"
  },
  "parameters": {
    "deploymentLocation": {
      "type": "string",
      "allowedValues": [
        "Brazil South",
        "Canada Central",
        "Canada East",
        "Central India",
        "East Asia",
        "East US",
        "East US 2",
        "Japan East",
        "Japan West",
        "North Central US",
        "North Europe",
        "South Central US",
        "Southeast Asia",
        "West Europe",
        "West India",
        "West US"
      ],
      "defaultValue": "East US"
    },
    "siteName": {
      "type": "string",
      "metadata": {
        "description": "The name of the web app that you wish to create. Name must contain only lowercase letters or numbers."
      }
    },
    "hostingPlanName": {
      "type": "string",
      "metadata": {
        "description": "The name of the App Service plan to use for hosting the web app."
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "defaultValue": "S1",
      "metadata": {
        "description": "The pricing tier for the hosting plan."
      }
    },
    "workerSize": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2"
      ],
      "defaultValue": "0",
      "metadata": {
        "description": "The instance size of the hosting plan."
      }
    },
    "repoURL": {
      "type": "string",
      "defaultValue": "https://github.com/catalystcode/vott-web.git",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      }
    },
    "administratorLogin": {
      "type": "string"
    },
    "administratorLoginPassword": {
      "type": "securestring"
    },
    "sendgridApiKey": {
      "type": "securestring"
    }
  },
  "resources": [
    {
      "name": "[variables('storageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2017-10-01",
      "sku": {
        "name": "Standard_LRS"
      },
      "location": "parameters('deploymentLocation')"
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "parameters('deploymentLocation')",
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[parameters('workerSize')]"
      },
      "properties": {
        "name": "[parameters('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('siteName')]",
      "type": "Microsoft.Web/sites",
      "location": "parameters('deploymentLocation')",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[parameters('hostingPlanName')]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true,
            "defaultConnection": {
              "value": "[concat('Database=postgres;Server=', toLower(parameters('siteName')), '.postgres.database.azure.com;User Id=', parameters('administratorLogin'),'@', toLower(parameters('siteName')),';Password=', parameters('administratorLoginPassword'))]",
              "type": "PostgreSQL"
            },
            "siteConfig": {
              "appSettings": [
                {
                  "name": "SENDGRID_API_KEY",
                  "value": "[parameters('sendgridApiKey')]"
                },
                {
                  "name": "VOTT_JWT_SECRET",
                  "value": "[uniqueString(resourceGroup().id)]"
                },
                {
                  "name": "GRAPHIQL_ENABLED",
                  "value": true
                },
                {
                  "name": "AZURE_STORAGE_CONNECTION_STRING",
                  "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',concat(listKeys(variables('storageAccountId'),'2015-05-01-preview').key1))]"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "[toLower(parameters('siteName'))]",
      "type": "Microsoft.DBforPostgreSQL/servers",
      "apiVersion": "2017-04-30-preview",
      "sku": {
        "name": "PGSQLS100",
        "tier": "Standard",
        "capacity": "100"
      },
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
      },
      "location": "parameters('deploymentLocation')",
      "tags": {},
      "resources": []
    }
  ]
}
